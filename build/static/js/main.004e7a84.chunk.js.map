{"version":3,"sources":["componentsjs/Search.js","componentsjs/PanelAdd.js","componentsjs/Menu.js","componentsjs/Item.js","componentsjs/List.js","App.js","index.js"],"names":["Search","props","onChangeEventSearch","e","query","target","value","toString","toLowerCase","onSearch","type","onChange","this","React","Component","PanelAdd","onChangeTitle","setState","title","onChangeImage","image","onChangeRating","rating","parseInt","onSubmit","preventDefault","state","onAdd","onCancel","bind","className","name","onClick","Menu","newItemPanel","add","Item","stars","Array","fill","onUpdateRating","id","onRemove","src","width","map","x","List","items","item","App","initBooks","copyBooks","books","temp","res","forEach","toLocaleLowerCase","indexOf","push","length","index","findIndex","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.004e7a84.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Search extends React.Component{\r\n\r\n      constructor(props){\r\n            super(props);\r\n      }\r\n\r\n      // Definimos una funcion para manejar el cambio del valor en el input de searc\r\n      onChangeEventSearch=(e)=>{\r\n            const query=e.target.value.toString().toLowerCase();//Lo que escriba en el input se convertira en string y a minusculas.\r\n            this.props.onSearch(query);\r\n      }\r\n\r\n\r\n      render(){\r\n            return(\r\n                  <input type='text' onChange={this.onChangeEventSearch}/>\r\n            )\r\n\r\n      }\r\n};\r\n\r\nexport default Search;","import React from 'react'\r\n\r\n\r\nclass PanelAdd extends React.Component{\r\n\r\n      constructor(props){\r\n            super(props);\r\n            this.state={\r\n                  title:'',\r\n                  image:'',\r\n                  rating:1\r\n            }\r\n\r\n            this.onChangeTitle=this.onChangeTitle.bind(this);\r\n            this.onChangeImage=this.onChangeImage.bind(this);\r\n\r\n      }\r\n\r\n\r\n// Funciones onChange\r\n      onChangeTitle=(e)=>{\r\n            this.setState({title: e.target.value})\r\n      }\r\n\r\n      onChangeImage=(e)=>{\r\n            this.setState({image: e.target.value})\r\n      }\r\n\r\n      onChangeRating=(e)=>{\r\n            const rating=parseInt(e.target.value);\r\n            this.setState({rating: rating})\r\n      }\r\n\r\n// Funcion para prevenir el enviado por defecto del form\r\n      onSubmit=(e)=>{\r\n            e.preventDefault();\r\n\r\n            const title=this.state.title;\r\n            const image=this.state.image;\r\n            const rating=this.state.rating;\r\n\r\n            this.props.onAdd({title: title, image: image, rating: rating});//Llamo a una funcion que viene desde mi App.js (El que tiene el estado principal)\r\n            this.props.onCancel();\r\n      }\r\n\r\n\r\n      render(){\r\n            return (\r\n                  <div className='new-item-panel-container'>\r\n                        <div className='new-item-panel'>\r\n                              <form onSubmit={this.onSubmit}>\r\n                                    <p>\r\n                                          <label>Título del libro</label><br/>\r\n                                          <input onChange={this.onChangeTitle} type='text' name='title' className='input'/>\r\n                                    </p>\r\n      \r\n                                    <p>\r\n                                          <label>Nombre de la imagen</label><br/>\r\n                                          <input onChange={this.onChangeImage} type='text' name='name' className='input'/>\r\n                                    </p>\r\n      \r\n                                    <p>\r\n                                          <label>Calificación</label><br/>\r\n                                          <select onChange={this.onChangeRating}>\r\n                                                <option value='1'>1</option>\r\n                                                <option value='2'>2</option>\r\n                                                <option value='3'>3</option>\r\n                                                <option value='4'>4</option>\r\n                                                <option value='5'>5</option>\r\n                                          </select>\r\n                                    </p>\r\n      \r\n                                    <input type='submit' className='button btn-blue' value='Registrar libro'/>\r\n                                    <button className='button btn-normal' onClick={this.props.onCancel}>Cancelar</button>\r\n                              </form>\r\n                        </div>\r\n                  </div>\r\n            )\r\n      }\r\n\r\n}\r\n\r\n\r\nexport default PanelAdd;","import React from 'react'\r\nimport Search from './Search'\r\nimport '../css/Menu.css'\r\nimport PanelAdd from './PanelAdd'\r\n\r\nclass  Menu extends React.Component{\r\n\r\n      constructor(props){\r\n            super(props);\r\n            this.state= {newItemPanel: false};\r\n            this.add=this.add.bind(this);\r\n            this.onCancel=this.onCancel.bind(this);\r\n      }\r\n\r\n\r\n      // Funcion para aparecer el form de ingreso de nuevo libro.\r\n      add(){\r\n            this.setState({newItemPanel: true})\r\n      }\r\n      // Funcion para desaparecer el form de ingreso de nuevo libro.\r\n      onCancel(){\r\n            this.setState({newItemPanel: false})\r\n      }\r\n       \r\n      render(){\r\n\r\n            return(\r\n                  <div className='container'>\r\n                        <div className='subcontainer'>\r\n      \r\n                              <div className='logo'>\r\n                                    {this.props.title}\r\n                              </div>\r\n      \r\n                              <div className='search'>\r\n                                    <Search onSearch={this.props.onSearch}  />\r\n                              </div>\r\n      \r\n                              <div className='actions'>\r\n                                    <button onClick={this.add} className='button btn-blue'>+Añadir nuevo libro</button>\r\n                              </div>\r\n      \r\n                        </div>\r\n                        \r\n                        {\r\n                              (this.state.newItemPanel)?<PanelAdd onCancel={this.onCancel} onAdd={this.props.onAdd}/> :null\r\n                        }\r\n                        \r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\n\r\nexport default Menu;","import React from 'react'\r\nimport '../css/Item.css'\r\n\r\nclass  Item extends React.Component{\r\n\r\n      constructor(props){\r\n            super(props);\r\n            this.state={\r\n                  title:'',\r\n                  image:'',\r\n                  rating:1,\r\n                  stars:[]\r\n            }\r\n\r\n      };\r\n\r\n      componentDidMount(){//Entiendo, que este metodo se aplica una vez el componente esta montado con datos iniciales, para luego modificarlos y actualizar nuestro estado de este item en especifico.\r\n            this.setState({//Primero asignamos sus valores segun los valores iniciales del estado padre App.js, luego los modificaremos.\r\n                  id: this.props.id,\r\n                  title: this.props.title,\r\n                  image: this.props.image,\r\n                  rating: parseInt(this.props.rating),\r\n                  stars: Array(parseInt(this.props.rating)).fill(0)\r\n            })\r\n      }\r\n\r\n      // Definimos una funcion para actualizar nuestro estado en rating y stars segun el numero que se coloque en nuestro input tipo select.\r\n      onChangeRating=(e)=>{\r\n            const rating = parseInt(e.target.value);//Pasamos a numero entero valor.\r\n\r\n            this.setState({\r\n                  rating: parseInt(e.target.value),\r\n                  stars: Array(parseInt(e.target.value)).fill(0)\r\n            });\r\n\r\n            this.props.onUpdateRating({id: this.state.id, title: this.state.title, image: this.state.image, rating: this.state.rating})\r\n\r\n\r\n      }\r\n\r\n      // Definimos una funcion para remover el item seleccionado.\r\n\r\n      onRemove=(e)=>{\r\n            this.props.onRemove(this.props.id);\r\n      }\r\n\r\n      render(){\r\n            return(\r\n                 <div className='item'>\r\n                       <div className='image'><img src={'images/' + this.state.image} width='100%'/></div>\r\n                       <div className='title'>{this.state.title}</div>\r\n                       <div className='rating'>\r\n                              <p>\r\n                              {\r\n                                    this.state.stars.map(x=>\r\n                                          <img src='images/star.png' width='32'/>)\r\n                              }\r\n                              </p>\r\n      \r\n                              Calificación:\r\n                              {/* Tener cuidado con este value****** */}\r\n                              <select value={this.state.rating} onChange={this.onChangeRating}>\r\n                                    <option value='1'>1</option>\r\n                                    <option value='2'>2</option>\r\n                                    <option value='3'>3</option>\r\n                                    <option value='4'>4</option>\r\n                                    <option value='5'>5</option>\r\n                              </select>\r\n      \r\n                       </div>\r\n                       <div className='actions'>\r\n                             <button onClick={this.onRemove}>Eliminar</button>\r\n                       </div>\r\n                 </div>\r\n            );\r\n      }\r\n};\r\n\r\nexport default Item;\r\n\r\n\r\n\r\n\r\n// En la linea 56: Si yo le asigo el valor al value de this.props.rating, se colocaria un valor al cual le pertenecia a mi anterior actualizacion.","import React from 'react'\r\nimport Item from './Item'\r\n\r\nimport '../css/List.css'\r\n\r\nfunction List(props){\r\n      return (\r\n            <div className='list'>\r\n                  {\r\n                  props.items.map(item=>\r\n                        <Item \r\n                              key={item.id}\r\n                              id= {item.id} \r\n                              title={item.title} \r\n                              rating={item.rating}\r\n                              image={item.image}\r\n\r\n                              onUpdateRating={props.onUpdateRating}\r\n                              onRemove={props.onRemove}\r\n                   />)\r\n                  }\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default List;","import React, {Component} from 'react'\r\nimport Menu from './componentsjs/Menu'\r\nimport List from './componentsjs/List'\r\nimport './css/App.css';\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      books:[\r\n        {id:0, rating: 4, title: 'Harry Potter y el caliz de fuego', image:'libro01.jpg'},\r\n        {id:1, rating: 3, title: 'The shining', image:'libro02.jpg'},\r\n        {id:2, rating: 5, title: 'Código Da Vinci', image:'libro03.jpg'},\r\n        {id:3, rating: 5, title: 'El Principito', image:'libro04.jpg'},\r\n        {id:4, rating: 4, title: 'Sobrenatural', image:'libro05.jpg'},\r\n        // {id:5, rating: 3, title: 'Gallinazos sin plumas', image:'libro06.jfif'},\r\n        // {id:6, rating: 5, title: '100 Años de soledad', image:'libro07.jfif'},\r\n        // {id:7, rating: 4, title: 'Padre rico padre pobre', image:'libro08.jfif'}\r\n      ],\r\n      //Usamos una copia de mi estado this.state.books  SOLO para el renderizado en pantalla (Se lo pasamos a nuestro componente List como prop)\r\n      copyBooks:[]\r\n    };\r\n  }\r\n\r\n  // Usamos el metodo componentDidMount para que cuando nuestra App se monte (se renderize completamente) llame  a initBooks (hacer una copia de nuestro this.state.books)\r\n  componentDidMount(){\r\n    this.initBooks();\r\n  };\r\n  // Definimos una funcion para que se actualize nuestro this.state.copyBooks, es cual sera una copia de nuestro this.state.books(principal)\r\n  initBooks=()=>{\r\n    this.setState((state, props)=>({\r\n      copyBooks: [ ...state.books]\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  // Definimos una funcion onsearch para identificar los items que hacen match con lo que se escribe en el input de search.\r\n  onSearch=(query)=>{\r\n    if (query==='') {//Si nuestro valor del input es vacio, llamamos a una funcion para que nuestro this.state.copyBooks sea una copia a this.state.books\r\n        this.initBooks();\r\n    } else {\r\n        const temp=[...this.state.books];//Creamos una variable temporal para copiar mi this.state.books\r\n        let res=[];//Creamos una variable para almacenar los items que hagan match\r\n\r\n        //Realizamos un mapeo de cada uno de nuestros items en en nuestro this.state.books en ese momento, y si el item tiene un titulo que hace match con el valor del input, agregamos ese item a nuestro array res.\r\n        temp.forEach(item=>{\r\n          if(item.title.toLocaleLowerCase().indexOf(query)>-1){//Aqui miramos a travez del titulo en minuscula y verificamos si tiene en su estructura el valor del input (si el index es positivo significa que si se encuentra dentro).\r\n            res.push(item);\r\n          }\r\n        });\r\n\r\n        this.setState({copyBooks: [...res]});//Actualizamos nuestro estado en la propiedad this.state.copyBooks(Encargado de renderizar los items).\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Definimos una funcion para agregar un nuevo elemento a nuestro this.state.books\r\n  onAdd=(item)=>{\r\n    let temp=[...this.state.books];//Creamos un array temporal. Primero con la copia de this.state.books\r\n    const id=temp[temp.length-1].id+1;//Creamos una variable con logica para identificar el id\r\n    item['id']=id;//Agregamos el atibuto id a nuestro nuevo item\r\n    temp.push(item);//Agregamos nuestro nuevo item a nuestro array temporal. En este momento, nuestro estado principal aun no se actualiza.\r\n\r\n    this.setState({books: [...temp]})//Actualizamos nuestro estado principal actualiando nuestro this.state.books con la copia de nuestro array temporal.\r\n    this.initBooks();//Llamamos a esta funcion para actualizar nuestro this.state.copyBooks (Para el renderizado)\r\n  }\r\n\r\n  // Definimos una funcion para actualizar nuestro estado padre con los nuevos valores de nuestro item modificado en item.js\r\n  onUpdateRating=(item)=>{\r\n    let temp=[...this.state.books];\r\n    const index=temp.findIndex(x=>x.id===item.id);//Guardamos en variable el numero de index al cual vamos a actualizar.\r\n\r\n    temp[index].title=item.title;\r\n    temp[index].image=item.image;\r\n    temp[index].rating=item.rating;\r\n\r\n    this.setState({books: [...temp]});\r\n    this.initBooks();\r\n  }\r\n\r\n  // Definimos una funcion para quitar un item seleccionado.\r\n  onRemove=(id)=>{\r\n      let temp=[...this.state.books];//Guardamos en una variable una copia de nuestro this.state.books.\r\n      const res=temp.filter(item=> item.id != id)//El filter nos devolvera un nuevo array solo los elementos que cumplan con la condicion dada.\r\n\r\n      this.setState({//Actualizamos nuestro estado this.state.books con el nuevo array arrojado por filter.\r\n        books: [...res]\r\n      });\r\n\r\n      this.initBooks();//Llamamos a la funcion para actualizar el renderizado.\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='app'>\r\n        <Menu title='Amozon' onAdd={this.onAdd} onSearch={this.onSearch}/>\r\n        <List \r\n          items={this.state.copyBooks} \r\n          onUpdateRating={this.onUpdateRating}\r\n          onRemove={this.onRemove}\r\n        />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}